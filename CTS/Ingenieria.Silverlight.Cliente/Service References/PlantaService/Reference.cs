//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Ingenieria.Silverlight.Cliente.PlantaService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlantaDTO", Namespace="http://schemas.datacontract.org/2004/07/AplicacionDTO.DTOs.Ingenieria.PlantaDtos")]
    public partial class PlantaDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescripcionField;
        
        private string NombrePlantaField;
        
        private string PlantaIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombrePlanta {
            get {
                return this.NombrePlantaField;
            }
            set {
                if ((object.ReferenceEquals(this.NombrePlantaField, value) != true)) {
                    this.NombrePlantaField = value;
                    this.RaisePropertyChanged("NombrePlanta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantaId {
            get {
                return this.PlantaIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantaIdField, value) != true)) {
                    this.PlantaIdField = value;
                    this.RaisePropertyChanged("PlantaId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlantaService.IPlantaModelService")]
    public interface IPlantaModelService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlantaModelService/ObtenerPlantas", ReplyAction="http://tempuri.org/IPlantaModelService/ObtenerPlantasResponse")]
        System.IAsyncResult BeginObtenerPlantas(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Ingenieria.Silverlight.Cliente.PlantaService.PlantaDTO> EndObtenerPlantas(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlantaModelServiceChannel : Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenerPlantasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenerPlantasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Ingenieria.Silverlight.Cliente.PlantaService.PlantaDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Ingenieria.Silverlight.Cliente.PlantaService.PlantaDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlantaModelServiceClient : System.ServiceModel.ClientBase<Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService>, Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService {
        
        private BeginOperationDelegate onBeginObtenerPlantasDelegate;
        
        private EndOperationDelegate onEndObtenerPlantasDelegate;
        
        private System.Threading.SendOrPostCallback onObtenerPlantasCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PlantaModelServiceClient() {
        }
        
        public PlantaModelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlantaModelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlantaModelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlantaModelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ObtenerPlantasCompletedEventArgs> ObtenerPlantasCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService.BeginObtenerPlantas(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenerPlantas(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Ingenieria.Silverlight.Cliente.PlantaService.PlantaDTO> Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService.EndObtenerPlantas(System.IAsyncResult result) {
            return base.Channel.EndObtenerPlantas(result);
        }
        
        private System.IAsyncResult OnBeginObtenerPlantas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService)(this)).BeginObtenerPlantas(callback, asyncState);
        }
        
        private object[] OnEndObtenerPlantas(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Ingenieria.Silverlight.Cliente.PlantaService.PlantaDTO> retVal = ((Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService)(this)).EndObtenerPlantas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenerPlantasCompleted(object state) {
            if ((this.ObtenerPlantasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenerPlantasCompleted(this, new ObtenerPlantasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenerPlantasAsync() {
            this.ObtenerPlantasAsync(null);
        }
        
        public void ObtenerPlantasAsync(object userState) {
            if ((this.onBeginObtenerPlantasDelegate == null)) {
                this.onBeginObtenerPlantasDelegate = new BeginOperationDelegate(this.OnBeginObtenerPlantas);
            }
            if ((this.onEndObtenerPlantasDelegate == null)) {
                this.onEndObtenerPlantasDelegate = new EndOperationDelegate(this.OnEndObtenerPlantas);
            }
            if ((this.onObtenerPlantasCompletedDelegate == null)) {
                this.onObtenerPlantasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenerPlantasCompleted);
            }
            base.InvokeAsync(this.onBeginObtenerPlantasDelegate, null, this.onEndObtenerPlantasDelegate, this.onObtenerPlantasCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService CreateChannel() {
            return new PlantaModelServiceClientChannel(this);
        }
        
        private class PlantaModelServiceClientChannel : ChannelBase<Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService>, Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService {
            
            public PlantaModelServiceClientChannel(System.ServiceModel.ClientBase<Ingenieria.Silverlight.Cliente.PlantaService.IPlantaModelService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginObtenerPlantas(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ObtenerPlantas", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Ingenieria.Silverlight.Cliente.PlantaService.PlantaDTO> EndObtenerPlantas(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Ingenieria.Silverlight.Cliente.PlantaService.PlantaDTO> _result = ((System.Collections.ObjectModel.ObservableCollection<Ingenieria.Silverlight.Cliente.PlantaService.PlantaDTO>)(base.EndInvoke("ObtenerPlantas", _args, result)));
                return _result;
            }
        }
    }
}
